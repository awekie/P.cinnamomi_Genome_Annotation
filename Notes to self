Conda enviroment does not have setuptools ect
"Raw script" based programs can be called to run everywhere by making a custom PATHVARIABLE and added it to the .bashrc file,> PATHVARIABLE/program
PROGRAMSCRIPT = export path/to/program (?)

.py = python script file, 
python setup.py install (from with program directory ,
might not work because of sudo, specify that you only want to install it in your portion of the RCC
python setup.py install --prefix /home/aec77/.local 

^^ This seems to work best when compiling from binaries, involves accessing C: from WSL and using rsync to push .tar(?).gz to the RCC
- dont assume setup.py is the correct install method 

cactus is install in Conda enviro
cactus requires the creation of a 'seqfile'

edit - EOL for creating txt files to run on RCC

RAGTAG in inside conda enviro2
post ragtag correction and scaffolding there will be more contigs and a different genome length (with extra Ns because of alignment mapping). New contig heads will contain "+"s 
to remove these use
cat old.fasta | sed 's/\+(OR OTHER REGEX)/(REPLACEMENT)/g' > new.fasta


Coley Tosto
  1:27 PM
1.  Create a directory in the **mnt** folder `mkdir /mnt/d`
2.  Mount the external drive to the directory you just created in the mnt folder (assume the drive shows in Windows as "D:") `mount -t drvfs d: /mnt/d`
**If you need administration privileges use sudo in front of both commands**

#Checking number of TEs post REPET
find the PROJECTNAME_REPET_chr_allTEs_nr_noSSR_join_path.globalAnnotStatsPerTE.txt and the first line = #of TEs
E>G 'nb of sequences:'

#Checking genome length
cat file.fa | awk '$0 ~ ">" {if (NR > 1) {print c;} c=0;printf substr($0,2,100) "\t"; } $0 !~ ">" {c+=length($0);} END { print c; }' > tabbed_file.txt
$ cat tabbed_file.txt | awk '{ sum+=$2} END {print sum}'

-or-

samtools faidx input.fa
cut -f1,2 input.fa.fai > sizes.genome

#list all blast databases in path
blastdbcmd -list [path]
E.G blastdbcmd -recursive  -list aec77/

#signalP is installed inside the python enviroment 'env'
cd ~
python -m venv env
source env/bin/activate
signalp6 -h
nohup signalp6 --fastafile 3750_braker.aa --output_dir signalP --format all --organism euk --mode slow-sequential -bs 20 -wp 100 > sig.out &


Paths to all masked genomes WGS (prior to braker2 CDS annotation) are stored as enviromental varialables.
E.G $GENOME_3034 =/home/3034/3034_flye1/assembly/masking1/3034_scaffolded_masked.fasta
These paths were established early 2024 so edits to fundamental directory structure will break them (3750 or 3759c3034)

When blasting original genomes for CRN1, CRN2, COX1 and ITS the crinklers were not well conserved, lots of parital hits. File pipeline:
makeblastdb -in path/to/braker2/augustus.ab_initio.codingseq -title augustus.ab_initio.codingseq -dbtype nucl -parse_seqids
#Creates a blastdb in that specific directory so each genome is run induvidually, .codingseq because post annotation = CDS which should contain these genes EXCEPT ITS!
#Therefore ensure blast query fasta is either in directory or an easy variable
blastn -query CNM_CRN1.fasta -db augustus.ab_initio.codingseq -out 478_CRN1_blastout.tab -outfmt "6 qseqid sseqid sstart send length mismatch pident bitscore evalue"
#^Contained in FINAL_CRN_blast.sh or something similar, output will be tab file contain coordinates of sequence to extract
blastdbcmd -db augustus.ab_initio.codingseq -dbtype nucl -out extracted_478_CRN1.fasta -range 1-161 -outfmt %f -entry g14853.t1
#^Contained in extract_fasta_blastcmd.sh
cat extracted_478_CRN1.fasta

BWA aligner (https://github.com/lh3/bwa) run from inside the bwa directory
./bwa index path/togenome/3750_masked.fasta
./bwa mem ref.fa read-se.fq.gz | gzip -3 > aln-se.sam.gz
./bwa mem ref.fa read1.fq read2.fq | gzip -3 > aln-pe.sam.gz
